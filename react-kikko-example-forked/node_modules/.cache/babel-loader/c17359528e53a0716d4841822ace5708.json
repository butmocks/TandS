{"ast":null,"code":"import _regeneratorRuntime from \"/home/butmocks/Projects/TandS/react-kikko-example-forked/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _taggedTemplateLiteral from \"/home/butmocks/Projects/TandS/react-kikko-example-forked/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\nimport _asyncToGenerator from \"/home/butmocks/Projects/TandS/react-kikko-example-forked/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _templateObject;\nimport { runQuery, sql } from \"@kikko-land/react\";\nexport var createNotesTableMigration = {\n  up: function () {\n    var _up = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(db) {\n      var query;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              query = sql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      CREATE TABLE IF NOT EXISTS notes (\\n        id varchar(20) PRIMARY KEY,\\n        title TEXT NOT NULL,\\n        content TEXT NOT NULL,\\n        updatedAt INTEGER NOT NULL,\\n        createdAt INTEGER NOT NULL\\n      );\\n      CREATE INDEX IF NOT EXISTS idx_note_title ON notes(title);\\n    \"])));\n              _context.next = 3;\n              return runQuery(db, query);\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    function up(_x) {\n      return _up.apply(this, arguments);\n    }\n    return up;\n  }(),\n  id: 1653668686076,\n  name: \"createNotesTable\"\n};","map":{"version":3,"names":["runQuery","sql","createNotesTableMigration","up","db","query","id","name"],"sources":["/home/butmocks/Projects/TandS/react-kikko-example-forked/src/migrations/createNotesTable.ts"],"sourcesContent":["import { IMigration, runQuery, sql } from \"@kikko-land/react\";\n\nexport const createNotesTableMigration: IMigration = {\n  up: async (db) => {\n    const query = sql`\n      CREATE TABLE IF NOT EXISTS notes (\n        id varchar(20) PRIMARY KEY,\n        title TEXT NOT NULL,\n        content TEXT NOT NULL,\n        updatedAt INTEGER NOT NULL,\n        createdAt INTEGER NOT NULL\n      );\n      CREATE INDEX IF NOT EXISTS idx_note_title ON notes(title);\n    `;\n\n    await runQuery(db, query);\n  },\n  id: 1653668686076,\n  name: \"createNotesTable\"\n};\n"],"mappings":";;;;AAAA,SAAqBA,QAAQ,EAAEC,GAAG,QAAQ,mBAAmB;AAE7D,OAAO,IAAMC,yBAAqC,GAAG;EACnDC,EAAE;IAAA,qEAAE,iBAAOC,EAAE;MAAA;MAAA;QAAA;UAAA;YAAA;cACLC,KAAK,GAAGJ,GAAG;cAAA;cAAA,OAWXD,QAAQ,CAACI,EAAE,EAAEC,KAAK,CAAC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAC1B;IAAA;MAAA;IAAA;IAAA;EAAA;EACDC,EAAE,EAAE,aAAa;EACjBC,IAAI,EAAE;AACR,CAAC"},"metadata":{},"sourceType":"module"}