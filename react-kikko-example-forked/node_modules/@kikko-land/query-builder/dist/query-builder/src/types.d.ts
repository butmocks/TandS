import { ISql } from "@kikko-land/sql";
export declare enum TokenType {
    Binary = "Binary",
    Unary = "Unary",
    Alias = "Alias",
    Compound = "Compound",
    Select = "Select",
    Update = "Update",
    Delete = "Delete",
    Insert = "Insert",
    Values = "Values",
    OrderTerm = "OrderTerm",
    LimitOffsetTerm = "LimitOffsetTerm",
    RawSql = "RawSql",
    CompoundOperator = "CompoundOperator",
    CTE = "CTE",
    Join = "Join",
    Returning = "Returning"
}
export interface IBaseToken<T extends TokenType = TokenType> {
    type: T;
    toSql(): ISql;
}
export declare const isToken: (t: unknown) => t is IBaseToken<TokenType>;
export declare function assertUnreachable(x: never): never;
