import { IPrimitiveValue, ISqlAdapter } from "@kikko-land/sql";
import { IBaseToken, TokenType } from "../../types";
import { ICompoundState } from "../compounds";
import { ICTEState } from "../cte";
import { ILimitOffsetState } from "../limitOffset";
import { IOrderState } from "../order";
export interface IValuesStatement extends IBaseToken<TokenType.Values>, IOrderState, ICompoundState, ILimitOffsetState, ICTEState {
    _values: (IBaseToken | ISqlAdapter | IPrimitiveValue)[][];
}
export declare const values: (...vals: (IBaseToken | ISqlAdapter | IPrimitiveValue)[][]) => IValuesStatement;
export declare const isValues: (val: unknown) => val is IValuesStatement;
