import { IPrimitiveValue, ISqlAdapter } from "@kikko-land/sql";
import { IBaseToken, TokenType } from "../types";
export interface ILimitOffsetTerm extends IBaseToken<TokenType.LimitOffsetTerm> {
    _limitValue?: IBaseToken;
    _offsetValue?: IBaseToken;
}
export interface ILimitOffsetState {
    _limitOffsetValue: ILimitOffsetTerm;
    limit: typeof limit;
    offset: typeof offset;
    withoutLimit: typeof withoutLimit;
    withoutOffset: typeof withoutOffset;
}
export declare const buildInitialLimitOffsetState: () => ILimitOffsetTerm;
export declare function limit<T extends ILimitOffsetState>(this: T, val: IBaseToken | ISqlAdapter | IPrimitiveValue): T;
export declare function withoutLimit<T extends ILimitOffsetState>(this: T): T;
export declare function offset<T extends ILimitOffsetState>(this: T, val: IBaseToken | ISqlAdapter | IPrimitiveValue): T;
export declare function withoutOffset<T extends ILimitOffsetState>(this: T): T;
