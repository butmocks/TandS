export declare type DistributiveOmit<T, K extends keyof Record<string, unknown>> = T extends unknown ? Omit<T, K> : never;
export declare type ISingleQueryHookResult<D> = {
    type: "loading";
    data?: D;
} | {
    type: "waitingDb";
    data?: D;
} | {
    type: "loaded";
    data: D;
} | {
    type: "noSqlPresent";
    data?: D;
};
export declare type IRunQueryHookResult<D> = {
    type: "running";
    data?: D;
} | {
    type: "waitingDb";
    data?: D;
} | {
    type: "done";
    data: D;
} | {
    type: "idle";
    data?: D;
};
export declare type IQueryHookResult<D> = {
    type: "loading";
    data: D[];
} | {
    type: "waitingDb";
    data: D[];
} | {
    type: "loaded";
    data: D[];
} | {
    type: "noSqlPresent";
    data: D[];
};
export declare type Falsy = false | 0 | "" | null | undefined;
