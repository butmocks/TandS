(function(l,u){typeof exports=="object"&&typeof module!="undefined"?u(exports,require("@kikko-land/kikko"),require("rxjs")):typeof define=="function"&&define.amd?define(["exports","@kikko-land/kikko","rxjs"],u):(l=typeof globalThis!="undefined"?globalThis:l||self,u(l.core={},l.kikko,l.rxjs))})(this,function(l,u,s){"use strict";const w=n=>{const r=n.sharedState.reactiveQueriesState;if(!r)throw new Error("Internal error, maybe you forget to connect the 'reactiveQueries' plugin?");return r},h=(n,r)=>{const{eventsCh$:t}=w(n),a=new Set(r.map(e=>e.toSql()).flatMap(e=>e.tables).map(e=>e.name));return t.pipe(s.switchMap(e=>new s.Observable(i=>{const f=p=>{i.next(p)};return e.addEventListener(f),()=>{e.removeEventListener(f)}})),s.filter(({changesInTables:e})=>e.some(i=>a.has(i))),s.startWith(void 0),s.switchMap(async()=>u.runQueries(n,r)),s.takeUntil(n.sharedState.stopStarted$))},m=async(n,r)=>{const t=await(async()=>{if(!!r)return new(await import("broadcast-channel")).BroadcastChannel(n,{type:"localstorage",webWorkerSupport:!1})})();let a=[];return{async postMessage(e){a.forEach(i=>{i(e)}),t&&await t.postMessage(e)},addEventListener(e){a.push(e),t==null||t.addEventListener("message",e)},removeEventListener(e){a=a.filter(i=>i!==e),t==null||t.removeEventListener("message",e)},async close(){a=[],t&&await t.close()}}},k=(n,r,t)=>new s.Observable(a=>{let e=!1,i;return(async()=>{const p=await m(n,r);e||a.next(p)})(),()=>{e=!0,i==null||i.close()}}).pipe(s.share({connector:()=>new s.ReplaySubject(1)}),s.takeUntil(t)),S=async(n,r)=>{if(r.length===0)return;const t=w(n);return s.firstValueFrom(t.eventsCh$.pipe(s.switchMap(async a=>{await a.postMessage({changesInTables:r})})))},y=n=>r=>{const t={},{dbName:a,eventsEmitter:e,stopStarted$:i}=r.sharedState,f=(n==null?void 0:n.webMultiTabSupport)!==void 0?n.webMultiTabSupport:!0,p=d=>{const o=d.dbState.localState.transactionsState.current,v=d.queries.map(c=>c.toSql()).filter(c=>c.isModifyQuery).flatMap(c=>c.tables).flatMap(c=>[c.name,...c.dependsOnTables.map(({name:b})=>b)]);if(v.length!==0)if(o){if(!t[o.id])throw new Error("Internal error: records with transactionId key was not created");for(const c of v)t[o.id].writeTables.add(c)}else S(d.dbState,v);return d.next(d)};return e.on("transactionWillStart",(d,o)=>{t[o.id]={writeTables:new Set}}),e.on("transactionRollbacked",(d,o)=>{delete t[o.id]}),e.on("transactionCommitted",(d,o)=>{if(!t[o.id])throw new Error("Internal error: records with transactionId key was not created");S(d,[...Array.from(t[o.id].writeTables)]),delete t[o.id]}),r.sharedState.reactiveQueriesState={eventsCh$:k(a+"-reactiveQueriesPlugin",f,i)},{...r,localState:{...r.localState,queriesMiddlewares:[...r.localState.queriesMiddlewares,p]}}};l.listenQueries=h,l.reactiveQueriesPlugin=y,Object.defineProperties(l,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
//# sourceMappingURL=index.umd.js.map
