{"version":3,"file":"index.es.js","sources":["../src/migrationPlugin.ts"],"sourcesContent":["import {\n  IDbClientPlugin,\n  IDbState,\n  runInTransaction,\n  runQuery,\n} from \"@kikko-land/kikko\";\nimport { generateInsert, sql } from \"@kikko-land/sql\";\n\nimport { IMigration } from \"./types\";\n\nconst migrationsTable = \"migrations\";\n\nconst runMigrations = (state: IDbState, migrations: IMigration[]) => {\n  if (migrations.length === 0) return;\n\n  return runInTransaction(state, async (state) => {\n    await runQuery(\n      state,\n      sql`\n        CREATE TABLE IF NOT EXISTS ${sql.raw(migrationsTable)} (\n          id INTEGER PRIMARY KEY,\n          name varchar(20) NOT NULL,\n          migratedAt INTEGER NOT NULL\n        )\n      `\n    );\n\n    const migratedMigrations = await runQuery<{ id: number }>(\n      state,\n      sql`SELECT id FROM ${sql.raw(migrationsTable)}`\n    );\n\n    const migratedIds = new Set(migratedMigrations.map(({ id }) => id));\n\n    for (const migration of migrations.sort((a, b) => a.id - b.id)) {\n      if (migratedIds.has(migration.id)) return;\n\n      await migration.up(state);\n\n      await runQuery(\n        state,\n        generateInsert(migrationsTable, [\n          {\n            id: migration.id,\n            name: migration.name,\n            migratedAt: new Date().getTime(),\n          },\n        ])\n      );\n    }\n  });\n};\n\nexport const migrationsPlugin = ({\n  migrations,\n}: {\n  migrations: IMigration[];\n}): IDbClientPlugin => (state: IDbState) => {\n  state.sharedState.eventsEmitter.on(\"initialized\", async () => {\n    await runMigrations(state, migrations);\n  });\n\n  return state;\n};\n"],"names":[],"mappings":";;AAUA,MAAM,kBAAkB;AAExB,MAAM,gBAAgB,CAAC,OAAiB,eAA6B;AACnE,MAAI,WAAW,WAAW;AAAG;AAEtB,SAAA,iBAAiB,OAAO,OAAO,WAAU;AAC9C,UAAM,SACJ,QACA;AAAA,qCAC+B,IAAI,IAAI,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA,OAMxD;AAEM,UAAA,qBAAqB,MAAM,SAC/B,QACA,qBAAqB,IAAI,IAAI,eAAe,GAC9C;AAEM,UAAA,cAAc,IAAI,IAAI,mBAAmB,IAAI,CAAC,EAAE,SAAS,EAAE,CAAC;AAEvD,eAAA,aAAa,WAAW,KAAK,CAAC,GAAG,MAAM,EAAE,KAAK,EAAE,EAAE,GAAG;AAC1D,UAAA,YAAY,IAAI,UAAU,EAAE;AAAG;AAE7B,YAAA,UAAU,GAAG,MAAK;AAElB,YAAA,SACJ,QACA,eAAe,iBAAiB;AAAA,QAC9B;AAAA,UACE,IAAI,UAAU;AAAA,UACd,MAAM,UAAU;AAAA,UAChB,YAAY,IAAI,KAAK,EAAE,QAAQ;AAAA,QACjC;AAAA,MACD,CAAA,CACH;AAAA,IACF;AAAA,EAAA,CACD;AACH;AAEO,MAAM,mBAAmB,CAAC;AAAA,EAC/B;AAAA,MAGqB,CAAC,UAAoB;AAC1C,QAAM,YAAY,cAAc,GAAG,eAAe,YAAY;AACtD,UAAA,cAAc,OAAO,UAAU;AAAA,EAAA,CACtC;AAEM,SAAA;AACT;;"}