(function(e,i){typeof exports=="object"&&typeof module!="undefined"?i(exports,require("@kikko-land/kikko"),require("@kikko-land/sql")):typeof define=="function"&&define.amd?define(["exports","@kikko-land/kikko","@kikko-land/sql"],i):(e=typeof globalThis!="undefined"?globalThis:e||self,i(e.core={},e.kikko,e.sql))})(this,function(e,i,t){"use strict";const o="migrations",u=(d,n)=>{if(n.length!==0)return i.runInTransaction(d,async a=>{await i.runQuery(a,t.sql`
        CREATE TABLE IF NOT EXISTS ${t.sql.raw(o)} (
          id INTEGER PRIMARY KEY,
          name varchar(20) NOT NULL,
          migratedAt INTEGER NOT NULL
        )
      `);const m=await i.runQuery(a,t.sql`SELECT id FROM ${t.sql.raw(o)}`),f=new Set(m.map(({id:r})=>r));for(const r of n.sort((c,g)=>c.id-g.id)){if(f.has(r.id))return;await r.up(a),await i.runQuery(a,t.generateInsert(o,[{id:r.id,name:r.name,migratedAt:new Date().getTime()}]))}})},s=({migrations:d})=>n=>(n.sharedState.eventsEmitter.on("initialized",async()=>{await u(n,d)}),n);e.migrationsPlugin=s,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
//# sourceMappingURL=index.umd.js.map
